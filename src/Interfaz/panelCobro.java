/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Controllers.*;
import EntityClasses.*;
import java.awt.Color;
import java.io.IOException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.print.PrintException;
import javax.swing.JComboBox;
import modelos.TicketVenta;

/**
 *
 * @author juan6
 */
public class panelCobro extends javax.swing.JPanel {

    /**
     * Creates new form panelCobro
     */
    //Clases Entidad
    private Lavador lavador;
    private Costoservicio[] costo = new Costoservicio[3];
    //private Costoservicio costo2; 
    //private Costoservicio costo3;

    private Ticket ticket;
    private Automovil auto;
    private Tamanio tamanio;
    private Tipovehiculo tipoV;
    private Servicio servicio;
    private Serviciosolicitado servSol;
    //Clases Controlador
    private LavadorJpaController jpaLavador;
    private CostoservicioJpaController jpaCosto;
    private TicketJpaController jpaTicket;
    private AutomovilJpaController jpaAutomovil;
    private TamanioJpaController jpaTamanio;
    private TipovehiculoJpaController jpaTipoV;
    private ServicioJpaController jpaServicio;
    private ServiciosolicitadoJpaController jpaServSol;
    //Listas
    private List<Lavador> listLavador;
    private List<Costoservicio> listCosto;
    private List<Ticket> listTicket;
    private List<Automovil> listAutomovil;
    private List<Tamanio> listTamanio;
    private List<Tipovehiculo> listTipoV;
    private List<Servicio> listServ;

    //private ArrayList<Costoservicio> base1 = new ArrayList<>();
    private String[] base2 = {"Solo Lavado", "Lavado con cera", "Lavado con crema", "Lavado con cera (pasta)", "Lavado con cera (pasta premium)"};
    private String[] base3 = {"Chico", "Mediano", "Grande"};

    //Otras vatiables
    private double total;
    private double totalPaquete;
    private double totalAsiento;
    private double totalTemp = 0;
    private boolean btnEst = false;
    private int idTamañoF;
    private int idTipoVehiculoF;
    private int idServicioF;
    private Date fecha;
    private Time Hora;
    private ArrayList<Costoservicio> servContr = new ArrayList<>();
    private TicketVenta tv;

    public panelCobro() {
        initComponents();
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("LavaAutos_DERSPU");
        jpaLavador = new LavadorJpaController(emf);
        jpaCosto = new CostoservicioJpaController(emf);
        jpaTicket = new TicketJpaController(emf);
        jpaAutomovil = new AutomovilJpaController(emf);
        jpaTamanio = new TamanioJpaController(emf);
        jpaTipoV = new TipovehiculoJpaController(emf);
        jpaServicio = new ServicioJpaController(emf);
        jpaServSol = new ServiciosolicitadoJpaController(emf);

        listLavador = jpaLavador.findLavadorEntities();
        listCosto = jpaCosto.findCostoservicioEntities();
        listTicket = jpaTicket.findTicketEntities();
        listAutomovil = jpaAutomovil.findAutomovilEntities();
        listTamanio = jpaTamanio.findTamanioEntities();
        listTipoV = jpaTipoV.findTipovehiculoEntities();
        listServ = jpaServicio.findServicioEntities();

        btnCobrar.setEnabled(false);
        txtCobro.setEnabled(false);
        panelGen.setEnabled(false);

        //desactivar hasta que inicie sesion
        tNombreCliente.setEnabled(false);
        tMarca.setEnabled(false);
        tModelo.setEnabled(false);
        tColor.setEnabled(false);
        tPlacas.setEnabled(false);
        tTipo.setEnabled(false);
        tTamañoV.setEnabled(false);
        tlavado.setEnabled(false);
        tExceso.setEnabled(false);

        nombreCliente.setEnabled(false);
        tipoVehiculoCB.setEnabled(false);
        tamañoVehiculoCB.setEnabled(false);
        marca.setEnabled(false);
        modelo.setEnabled(false);
        color.setEnabled(false);
        placas.setEnabled(false);
        extraSuciedad.setEnabled(false);
        servicioCB.setEnabled(false);
        servInterior.setEnabled(false);
        totalPagar.setEnabled(false);

        llenarTipoV();
        repaint();
        iniciarTa();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoServAdic = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel20 = new javax.swing.JLabel();
        totalPagar = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        dineroIngresado = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JPanel();
        txtAceptar = new javax.swing.JLabel();
        idUsuario = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        btnCobrar = new javax.swing.JPanel();
        txtCobro = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtMensajeSesion = new javax.swing.JLabel();
        txtMensaje = new javax.swing.JLabel();
        panelGen = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        tNombreCliente = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        nombreCliente = new javax.swing.JTextField();
        tipoVehiculoCB = new javax.swing.JComboBox<>();
        tTipo = new javax.swing.JLabel();
        tTamañoV = new javax.swing.JLabel();
        tamañoVehiculoCB = new javax.swing.JComboBox<>();
        marca = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        tMarca = new javax.swing.JLabel();
        tModelo = new javax.swing.JLabel();
        modelo = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        color = new javax.swing.JTextField();
        placas = new javax.swing.JTextField();
        tColor = new javax.swing.JLabel();
        tPlacas = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        servicioCB = new javax.swing.JComboBox<>();
        tlavado = new javax.swing.JLabel();
        tExceso = new javax.swing.JLabel();
        extraSuciedad = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        servInterior = new javax.swing.JCheckBox();
        btnPaquete = new javax.swing.JRadioButton();
        btnIndividual = new javax.swing.JRadioButton();
        tamañoLICB = new javax.swing.JComboBox<>();
        tTamaño = new javax.swing.JLabel();
        tPaquete = new javax.swing.JLabel();
        paqueteLICB = new javax.swing.JComboBox<>();
        tNAsientos = new javax.swing.JLabel();
        noAsientos = new javax.swing.JTextField();
        separadorNA = new javax.swing.JSeparator();
        txtMsg = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cambio = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1020, 570));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jLabel1.setText("Identificador de lavador: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, 40));

        jLabel2.setFont(new java.awt.Font("Roboto Medium", 1, 22)); // NOI18N
        jLabel2.setText("Sistema de cobro");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, -1, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 140, 10));

        jLabel20.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jLabel20.setText("Total a pagar:     $");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, -1, -1));

        totalPagar.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        totalPagar.setText("00.00");
        add(totalPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 480, -1, -1));

        jLabel22.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jLabel22.setText("Ingrese el dinero:     $");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 480, -1, -1));

        dineroIngresado.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        dineroIngresado.setBorder(null);
        add(dineroIngresado, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 480, 100, -1));

        btnAceptar.setBackground(new java.awt.Color(102, 153, 255));
        btnAceptar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        txtAceptar.setFont(new java.awt.Font("Roboto Medium", 0, 15)); // NOI18N
        txtAceptar.setForeground(new java.awt.Color(255, 255, 255));
        txtAceptar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtAceptar.setText("Aceptar");
        txtAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAceptarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtAceptarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtAceptarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnAceptarLayout = new javax.swing.GroupLayout(btnAceptar);
        btnAceptar.setLayout(btnAceptarLayout);
        btnAceptarLayout.setHorizontalGroup(
            btnAceptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
        );
        btnAceptarLayout.setVerticalGroup(
            btnAceptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtAceptar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 110, 30));

        idUsuario.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        idUsuario.setBorder(null);
        idUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                idUsuarioMousePressed(evt);
            }
        });
        idUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idUsuarioActionPerformed(evt);
            }
        });
        add(idUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 130, -1));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 500, 110, -1));

        btnCobrar.setBackground(new java.awt.Color(102, 153, 255));
        btnCobrar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnCobrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        txtCobro.setFont(new java.awt.Font("Roboto Medium", 0, 15)); // NOI18N
        txtCobro.setForeground(new java.awt.Color(255, 255, 255));
        txtCobro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtCobro.setText("Cobrar");
        txtCobro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCobro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCobroMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCobroMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtCobroMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnCobrarLayout = new javax.swing.GroupLayout(btnCobrar);
        btnCobrar.setLayout(btnCobrarLayout);
        btnCobrarLayout.setHorizontalGroup(
            btnCobrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtCobro, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
        );
        btnCobrarLayout.setVerticalGroup(
            btnCobrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtCobro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        add(btnCobrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 470, 110, 30));

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cobro.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 570));

        txtMensajeSesion.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        txtMensajeSesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(txtMensajeSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 330, 30));

        txtMensaje.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(txtMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(648, 430, 300, 30));

        panelGen.setBackground(new java.awt.Color(255, 255, 255));
        panelGen.setBorder(null);
        panelGen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 17)); // NOI18N
        jLabel6.setText("Datos del automovil");
        panelGen.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        tNombreCliente.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tNombreCliente.setText("Nombre del cliente: ");
        panelGen.add(tNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 30));
        panelGen.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 199, 10));

        nombreCliente.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        nombreCliente.setForeground(new java.awt.Color(153, 153, 153));
        nombreCliente.setText("Ingrese el nombre del cliente");
        nombreCliente.setBorder(null);
        nombreCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nombreClienteMousePressed(evt);
            }
        });
        nombreCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreClienteActionPerformed(evt);
            }
        });
        panelGen.add(nombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 210, -1));

        tipoVehiculoCB.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tipoVehiculoCB.setBorder(null);
        tipoVehiculoCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoVehiculoCBItemStateChanged(evt);
            }
        });
        tipoVehiculoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoVehiculoCBActionPerformed(evt);
            }
        });
        panelGen.add(tipoVehiculoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 160, -1));

        tTipo.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tTipo.setText("  Tipo de vehiculo: ");
        panelGen.add(tTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 130, 30));

        tTamañoV.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tTamañoV.setText("Tamaño de vehiculo: ");
        panelGen.add(tTamañoV, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 150, 30));

        tamañoVehiculoCB.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tamañoVehiculoCB.setBorder(null);
        tamañoVehiculoCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tamañoVehiculoCBItemStateChanged(evt);
            }
        });
        tamañoVehiculoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tamañoVehiculoCBActionPerformed(evt);
            }
        });
        panelGen.add(tamañoVehiculoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 160, -1));

        marca.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        marca.setForeground(new java.awt.Color(153, 153, 153));
        marca.setText("Ingrese la marca");
        marca.setBorder(null);
        marca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                marcaMousePressed(evt);
            }
        });
        marca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcaActionPerformed(evt);
            }
        });
        panelGen.add(marca, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 210, -1));
        panelGen.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 210, 10));

        tMarca.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tMarca.setText(" Marca: ");
        panelGen.add(tMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 60, 30));

        tModelo.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tModelo.setText(" Modelo: ");
        panelGen.add(tModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 70, 30));

        modelo.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        modelo.setForeground(new java.awt.Color(153, 153, 153));
        modelo.setText("Ingrese el modelo");
        modelo.setBorder(null);
        modelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                modeloMousePressed(evt);
            }
        });
        modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeloActionPerformed(evt);
            }
        });
        panelGen.add(modelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 210, -1));
        panelGen.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 210, 10));
        panelGen.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 210, -1));

        color.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        color.setForeground(new java.awt.Color(153, 153, 153));
        color.setText("Ingrese el color");
        color.setBorder(null);
        color.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorMousePressed(evt);
            }
        });
        panelGen.add(color, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 210, -1));

        placas.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        placas.setForeground(new java.awt.Color(153, 153, 153));
        placas.setText("Ingrese las placas");
        placas.setBorder(null);
        placas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placasMousePressed(evt);
            }
        });
        placas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placasActionPerformed(evt);
            }
        });
        panelGen.add(placas, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 210, -1));

        tColor.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tColor.setText("Color: ");
        panelGen.add(tColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 50, 30));

        tPlacas.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tPlacas.setText("Placas: ");
        panelGen.add(tPlacas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 70, 30));
        panelGen.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 210, 10));

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        jLabel13.setText("Servicio de lavado");
        panelGen.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 17)); // NOI18N
        jLabel12.setText("Servicios a solicitar");
        panelGen.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        servicioCB.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        servicioCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solo lavado", "Lavado con crema", "Lavado con cera", "Lavado con encerado (pasta)", "Lavado con encerado (pasta premium)" }));
        servicioCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicioCBActionPerformed(evt);
            }
        });
        panelGen.add(servicioCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 260, -1));

        tlavado.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tlavado.setText("Lavado");
        panelGen.add(tlavado, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, -1, -1));

        tExceso.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tExceso.setText("Extra por exceso de suciedad");
        panelGen.add(tExceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 200, -1));

        extraSuciedad.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        extraSuciedad.setText("Si");
        extraSuciedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extraSuciedadActionPerformed(evt);
            }
        });
        panelGen.add(extraSuciedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, -1, -1));

        jLabel17.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        jLabel17.setText("Servicio de lavado de interiores");
        panelGen.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, -1, -1));

        servInterior.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        servInterior.setText("Si");
        servInterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servInteriorActionPerformed(evt);
            }
        });
        panelGen.add(servInterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 170, -1, -1));

        grupoServAdic.add(btnPaquete);
        btnPaquete.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnPaquete.setText("Paquete");
        btnPaquete.setEnabled(false);
        btnPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaqueteActionPerformed(evt);
            }
        });
        panelGen.add(btnPaquete, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 200, -1, -1));

        grupoServAdic.add(btnIndividual);
        btnIndividual.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        btnIndividual.setSelected(true);
        btnIndividual.setText("Individual");
        btnIndividual.setEnabled(false);
        btnIndividual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIndividualActionPerformed(evt);
            }
        });
        panelGen.add(btnIndividual, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 200, -1, -1));

        tamañoLICB.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tamañoLICB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chico", "Mediano", "Grande", "Familiar" }));
        tamañoLICB.setEnabled(false);
        tamañoLICB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tamañoLICBActionPerformed(evt);
            }
        });
        panelGen.add(tamañoLICB, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 110, -1));

        tTamaño.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tTamaño.setText("Tamaño:");
        tTamaño.setEnabled(false);
        panelGen.add(tTamaño, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, 30));

        tPaquete.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tPaquete.setText("Paquete: ");
        tPaquete.setEnabled(false);
        panelGen.add(tPaquete, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, -1, 30));

        paqueteLICB.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        paqueteLICB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LITE", "MEDIO", "FULL" }));
        paqueteLICB.setEnabled(false);
        paqueteLICB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paqueteLICBActionPerformed(evt);
            }
        });
        panelGen.add(paqueteLICB, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 230, 100, -1));

        tNAsientos.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        tNAsientos.setText("Numero de asientos");
        tNAsientos.setEnabled(false);
        panelGen.add(tNAsientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, -1, 30));

        noAsientos.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        noAsientos.setForeground(new java.awt.Color(102, 102, 102));
        noAsientos.setText("0");
        noAsientos.setBorder(null);
        noAsientos.setEnabled(false);
        noAsientos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                noAsientosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                noAsientosFocusLost(evt);
            }
        });
        noAsientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noAsientosMouseClicked(evt);
            }
        });
        noAsientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noAsientosActionPerformed(evt);
            }
        });
        noAsientos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noAsientosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                noAsientosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                noAsientosKeyTyped(evt);
            }
        });
        panelGen.add(noAsientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, 90, -1));

        separadorNA.setEnabled(false);
        panelGen.add(separadorNA, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 110, 10));

        add(panelGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 780, 340));

        txtMsg.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(txtMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 520, 460, 30));

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jLabel3.setText("Cambio: $");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 80, -1));

        cambio.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        add(cambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 510, 100, 20));
    }// </editor-fold>//GEN-END:initComponents
    public void iniciarTa() {
        tamañoVehiculoCB.removeAllItems();
        servicioCB.removeAllItems();
        tamañoVehiculoCB.addItem("Chico");
        tamañoVehiculoCB.addItem("Mediano");
        tamañoVehiculoCB.addItem("Grande");
        servicioCB.addItem("Solo Lavado");
        servicioCB.addItem("Lavado con cera");
        servicioCB.addItem("Lavado con crema");
        servicioCB.addItem("Lavado con cera (pasta)");
        servicioCB.addItem("Lavado con cera (pasta premium)");
        servicioCB.repaint();
        tamañoVehiculoCB.repaint();
        servicioCB.setSelectedIndex(0);
        tamañoVehiculoCB.setSelectedIndex(0);
    }

    public void llenarTipoV() {
        for (Tipovehiculo a : listTipoV) {
            tipoVehiculoCB.addItem(a.getDescripcion());
        }
        tipoVehiculoCB.repaint();
        tipoVehiculoCB.setSelectedIndex(0);
    }

    private void nombreClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreClienteActionPerformed

    private void marcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marcaActionPerformed

    private void idUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idUsuarioActionPerformed

    private void txtAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAceptarMouseClicked
        //Aqui va lo que hará el boton Aceptar
        if (listLavador.isEmpty()) {
            txtMensajeSesion.setForeground(Color.red);
            txtMensajeSesion.setText("No hay usuarios en la BD");

            return;
        }
        for (int i = 0; i < listLavador.size(); i++) {
            try {
                if (listLavador.get(i).getIdLavador().equals(Integer.parseInt(idUsuario.getText()))) {
                    lavador = listLavador.get(i);
                    txtMensajeSesion.setText("Bienvenido " + listLavador.get(i).getUsuarioidUsuario().getNombre());
                    txtMensajeSesion.setForeground(Color.BLACK);
                    lavador = listLavador.get(i);
                    btnCobrar.setEnabled(true);
                    panelGen.setEnabled(true);
                    txtCobro.setEnabled(true);

                    nombreCliente.setEnabled(true);
                    tipoVehiculoCB.setEnabled(true);
                    tamañoVehiculoCB.setEnabled(true);
                    marca.setEnabled(true);
                    modelo.setEnabled(true);
                    color.setEnabled(true);
                    placas.setEnabled(true);
                    extraSuciedad.setEnabled(true);
                    servicioCB.setEnabled(true);
                    servInterior.setEnabled(true);
                    totalPagar.setEnabled(true);

                    tNombreCliente.setEnabled(true);
                    tMarca.setEnabled(true);
                    tModelo.setEnabled(true);
                    tColor.setEnabled(true);
                    tPlacas.setEnabled(true);
                    tTipo.setEnabled(true);
                    tTamañoV.setEnabled(true);
                    tlavado.setEnabled(true);
                    tExceso.setEnabled(true);
                    btnCobrar.setEnabled(true);
                    txtCobro.setEnabled(true);

                    nombreCliente.setText("Ingrese el nombre del cliente");
                    marca.setText("Ingrese la marca");
                    modelo.setText("Ingrese el modelo");
                    color.setText("Ingrese el color");
                    placas.setText("Ingrese las placas");
                    dineroIngresado.setText("");
                    cambio.setText("");

                    btnAceptar.setEnabled(false);
                    txtAceptar.setEnabled(false);
                    idUsuario.setEnabled(false);

                    cambio.setText("");
                    tamañoVehiculoCB.setSelectedIndex(0);

                    repaint();
                    return;
                } else {
                    txtMensajeSesion.setText("ID erroneo");
                    txtMensajeSesion.setForeground(Color.red);
                }
            } catch (NumberFormatException e) {
                txtMensajeSesion.setText("Ingresa solo numeros");
                txtMensajeSesion.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_txtAceptarMouseClicked

    private void txtCobroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCobroMouseClicked
        auto = new Automovil();
        ticket = new Ticket();
        Date fech = Date.from(Instant.now());
        String hor = "";
        try {
            if (!(nombreCliente.getText().equalsIgnoreCase("Ingrese el nombre del cliente"))
                    && !nombreCliente.getText().equalsIgnoreCase("")) {
                if (!(modelo.getText().equalsIgnoreCase("Ingrese el modelo"))
                        && !modelo.getText().equalsIgnoreCase("") && !(color.getText().equalsIgnoreCase("Ingrese el color"))
                        && !color.getText().equalsIgnoreCase("") && !(marca.getText().equalsIgnoreCase("Ingrese la marca"))
                        && !marca.getText().equalsIgnoreCase("")) {

                    if (total < Double.parseDouble(dineroIngresado.getText()) && Double.parseDouble(dineroIngresado.getText()) > 0) {
                        txtMsg.setText("");
                        txtMsg.setForeground(Color.BLACK);
                        double cambioC = Double.parseDouble(dineroIngresado.getText()) - total;
                        cambio.setText("" + cambioC);
                        for (Costoservicio aa : costo) {
                            if (aa != null) {
                                servContr.add(aa);
                                System.out.println("" + aa.getIdServicioCosto());
                            }
                        }

                        if (placas.getText().equalsIgnoreCase("Ingrese las placas")) {
                            placas.setText("");
                        }

                        //Auto
                        auto.setNombreCliente(nombreCliente.getText());
                        auto.setMarca(marca.getText());
                        auto.setModelo(modelo.getText());
                        getTamanio(idTamañoF);
                        getTipoV(idTipoVehiculoF);
                        getServ(idServicioF);
                        auto.setTamanioidTamanio(tamanio);
                        auto.setTipoVehiculoidTipoVehiculo(tipoV);
                        auto.setColor(color.getText());
                        auto.setPlacas(placas.getText());
                        jpaAutomovil.create(auto);

                        //Ticket
                        ticket.setAutomovilidAutomovil(auto);
                        DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                        Date date = new Date();
                        hor = dateFormat.format(date);
                        Hora = Time.valueOf(hor);
                        /*LocalDate loDa = LocalDate.now();
                        ZoneId defaultZoneId = ZoneId.systemDefault();
                        fecha = Date.from(loDa.atStartOfDay(defaultZoneId).toInstant());
                         */
                        java.sql.Date a = new java.sql.Date(fech.getTime());
                        ticket.setFecha(a);
                        ticket.setHora(Hora);
                        ticket.setLavadoridLavador(lavador);
                        ticket.setTotal(total);
                        jpaTicket.create(ticket);
                        listTicket = jpaTicket.findTicketEntities();
                        ticket = listTicket.get(listTicket.size() - 1);

                        //Servicio solicitado
                        for (Costoservicio jl : servContr) {
                            servSol = new Serviciosolicitado();
                            servSol.setTicketidTicket(ticket);
                            servSol.setCostoServicioidServicioCosto(jl);
                            jpaServSol.create(servSol);
                        }

                        tv = new TicketVenta();
                        tv.setVendedor(lavador.getUsuarioidUsuario().getNombre());
                        tv.setCliente(nombreCliente.getText());
                        tv.setMarca(marca.getText());
                        tv.setModelo(modelo.getText());
                        tv.setColor(color.getText());
                        tv.setEfectivo(dineroIngresado.getText());
                        tv.setFecha(a.toString());
                        tv.setTotal(String.valueOf(total));
                        tv.setArticulos(formatoServicios(servContr));
                        tv.setPlacas(placas.getText());
                        tv.setFolio(String.valueOf(ticket.getIdTicket()));
                        tv.setCambio(cambio.getText());
                        tv.setHora(hor);
                        System.out.println(tv.imprimirTicket());
                        try {
                            //tv.printIMG();
                            tv.print(true);
                        } catch (IOException ex) {
                            Logger.getLogger(panelCobro.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (PrintException ex) {
                            Logger.getLogger(panelCobro.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        placas.setText("Ingrese las placas");
                        btnAceptar.setEnabled(true);
                        txtAceptar.setEnabled(true);
                        idUsuario.setEnabled(true);
                        idUsuario.setText("");
                        desactivar();

                        for (int ef = 0; ef < costo.length; ef++) {
                            costo[ef] = null;
                        }

                    } else {
                        txtMsg.setText("Ingrese una cantidad de dinero mayor al total");
                        txtMsg.setForeground(Color.red);
                    }
                } else {
                    txtMsg.setText("Ingrese los datos del automovil");
                    txtMsg.setForeground(Color.red);
                }
            } else {
                txtMsg.setText("Ingrese el nombre del cliente");
                txtMsg.setForeground(Color.red);
            }
        } catch (NumberFormatException ex) {
            txtMsg.setText("Ingrese una cantidad correcta");
            txtMsg.setForeground(Color.red);
        }

    }//GEN-LAST:event_txtCobroMouseClicked

    private String cortarCad(int i, int f, String cad) {
        if (cad.length() > f) {
            return cad.substring(i, f);
        }
        return cad;
    }

    public String formatoServicios(ArrayList<Costoservicio> lo) {
        String articulos = "";
        //"======SERVICIOS SOLICITADOS=====\n"
        for (Costoservicio DES : lo) {
            articulos += String.format("%-25s %.1f\n",
                    cortarCad(0, 24, DES.getServicioidServicio().getNombreServicio()), DES.getPrecio());
        }
        return articulos;
    }

    public void desactivar() {
        tNombreCliente.setEnabled(false);
        tMarca.setEnabled(false);
        tModelo.setEnabled(false);
        tColor.setEnabled(false);
        tPlacas.setEnabled(false);
        tTipo.setEnabled(false);
        tTamañoV.setEnabled(false);
        tlavado.setEnabled(false);
        tExceso.setEnabled(false);

        nombreCliente.setEnabled(false);
        tipoVehiculoCB.setEnabled(false);
        tamañoVehiculoCB.setEnabled(false);
        marca.setEnabled(false);
        modelo.setEnabled(false);
        color.setEnabled(false);
        placas.setEnabled(false);
        extraSuciedad.setEnabled(false);
        servicioCB.setEnabled(false);
        servInterior.setEnabled(false);
        totalPagar.setEnabled(false);
        extraSuciedad.setSelected(false);
        servInterior.setSelected(false);
        btnCobrar.setEnabled(false);
        txtCobro.setEnabled(false);
        for (int h = 0; h < costo.length; h++) {
            costo[h] = null;
        }
        repaint();
    }

    private void txtAceptarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAceptarMouseEntered
        btnAceptar.setBackground(new Color(82, 163, 255));
    }//GEN-LAST:event_txtAceptarMouseEntered

    private void txtAceptarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAceptarMouseExited
        btnAceptar.setBackground(new Color(102, 153, 255));
    }//GEN-LAST:event_txtAceptarMouseExited

    private void txtCobroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCobroMouseEntered
        btnCobrar.setBackground(new Color(82, 163, 255));
    }//GEN-LAST:event_txtCobroMouseEntered

    private void txtCobroMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCobroMouseExited
        btnCobrar.setBackground(new Color(102, 153, 255));
    }//GEN-LAST:event_txtCobroMouseExited

    private void nombreClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nombreClienteMousePressed
        if (nombreCliente.getText().equals("Ingrese el nombre del cliente")) {
            nombreCliente.setText("");
            nombreCliente.setForeground(Color.black);
        }
        if (marca.getText().equals("Ingrese la marca") || marca.getText().equals("")) {
            marca.setText("Ingrese la marca");
            marca.setForeground(Color.gray);
        }
        if (modelo.getText().equals("Ingrese el modelo") || modelo.getText().equals("")) {
            modelo.setText("Ingrese el modelo");
            modelo.setForeground(Color.gray);
        }
        if (color.getText().equals("Ingrese el color") || color.getText().equals("")) {
            color.setText("Ingrese el color");
            color.setForeground(Color.gray);
        }
        if (placas.getText().equals("Ingrese las placas") || placas.getText().equals("")) {
            placas.setText("Ingrese las placas");
            placas.setForeground(Color.gray);
        }
    }//GEN-LAST:event_nombreClienteMousePressed

    private void placasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placasActionPerformed

    private void marcaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marcaMousePressed
        if (marca.getText().equals("Ingrese la marca")) {
            marca.setText("");
            marca.setForeground(Color.black);
        }
        if (nombreCliente.getText().equals("Ingrese el nombre del cliente") || nombreCliente.getText().equals("")) {
            nombreCliente.setText("Ingrese el nombre del cliente");
            nombreCliente.setForeground(Color.gray);
        }
        if (modelo.getText().equals("Ingrese el modelo") || modelo.getText().equals("")) {
            modelo.setText("Ingrese el modelo");
            modelo.setForeground(Color.gray);
        }
        if (color.getText().equals("Ingrese el color") || color.getText().equals("")) {
            color.setText("Ingrese el color");
            color.setForeground(Color.gray);
        }
        if (placas.getText().equals("Ingrese las placas") || placas.getText().equals("")) {
            placas.setText("Ingrese las placas");
            placas.setForeground(Color.gray);
        }
    }//GEN-LAST:event_marcaMousePressed

    private void modeloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeloMousePressed
        if (modelo.getText().equals("Ingrese el modelo")) {
            modelo.setText("");
            modelo.setForeground(Color.black);
        }
        if (nombreCliente.getText().equals("Ingrese el nombre del cliente") || nombreCliente.getText().equals("")) {
            nombreCliente.setText("Ingrese el nombre del cliente");
            nombreCliente.setForeground(Color.gray);
        }
        if (marca.getText().equals("Ingrese la marca") || marca.getText().equals("")) {
            marca.setText("Ingrese la marca");
            marca.setForeground(Color.gray);
        }
        if (color.getText().equals("Ingrese el color") || color.getText().equals("")) {
            color.setText("Ingrese el color");
            color.setForeground(Color.gray);
        }
        if (placas.getText().equals("Ingrese las placas") || placas.getText().equals("")) {
            placas.setText("Ingrese las placas");
            placas.setForeground(Color.gray);
        }
    }//GEN-LAST:event_modeloMousePressed

    private void colorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorMousePressed
        if (color.getText().equals("Ingrese el color")) {
            color.setText("");
            color.setForeground(Color.black);
        }
        if (nombreCliente.getText().equals("Ingrese el nombre del cliente") || nombreCliente.getText().equals("")) {
            nombreCliente.setText("Ingrese el nombre del cliente");
            nombreCliente.setForeground(Color.gray);
        }
        if (marca.getText().equals("Ingrese la marca") || marca.getText().equals("")) {
            marca.setText("Ingrese la marca");
            marca.setForeground(Color.gray);
        }
        if (modelo.getText().equals("Ingrese el modelo") || modelo.getText().equals("")) {
            modelo.setText("Ingrese el modelo");
            modelo.setForeground(Color.gray);
        }
        if (placas.getText().equals("Ingrese las placas") || placas.getText().equals("")) {
            placas.setText("Ingrese las placas");
            placas.setForeground(Color.gray);
        }
    }//GEN-LAST:event_colorMousePressed

    private void placasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placasMousePressed
        if (placas.getText().equals("Ingrese las placas")) {
            placas.setText("");
            placas.setForeground(Color.black);
        }
        if (nombreCliente.getText().equals("Ingrese el nombre del cliente") || nombreCliente.getText().equals("")) {
            nombreCliente.setText("Ingrese el nombre del cliente");
            nombreCliente.setForeground(Color.gray);
        }
        if (marca.getText().equals("Ingrese la marca") || marca.getText().equals("")) {
            marca.setText("Ingrese la marca");
            marca.setForeground(Color.gray);
        }
        if (modelo.getText().equals("Ingrese el modelo") || modelo.getText().equals("")) {
            modelo.setText("Ingrese el modelo");
            modelo.setForeground(Color.gray);
        }
        if (color.getText().equals("Ingrese el color") || color.getText().equals("")) {
            color.setText("Ingrese el color");
            color.setForeground(Color.gray);
        }
    }//GEN-LAST:event_placasMousePressed

    private void idUsuarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idUsuarioMousePressed
        if (nombreCliente.getText().equals("Ingrese el nombre del cliente") || nombreCliente.getText().equals("")) {
            nombreCliente.setText("Ingrese el nombre del cliente");
            nombreCliente.setForeground(Color.gray);
        }
        if (marca.getText().equals("Ingrese la marca") || marca.getText().equals("")) {
            marca.setText("Ingrese la marca");
            marca.setForeground(Color.gray);
        }
        if (modelo.getText().equals("Ingrese el modelo") || modelo.getText().equals("")) {
            modelo.setText("Ingrese el modelo");
            modelo.setForeground(Color.gray);
        }
        if (color.getText().equals("Ingrese el color") || color.getText().equals("")) {
            color.setText("Ingrese el color");
            color.setForeground(Color.gray);
        }
        if (placas.getText().equals("Ingrese las placas") || placas.getText().equals("")) {
            placas.setText("Ingrese las placas");
            placas.setForeground(Color.gray);
        }
    }//GEN-LAST:event_idUsuarioMousePressed

    private void tamañoVehiculoCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tamañoVehiculoCBItemStateChanged

    }//GEN-LAST:event_tamañoVehiculoCBItemStateChanged

    private void tipoVehiculoCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoVehiculoCBItemStateChanged

    }//GEN-LAST:event_tipoVehiculoCBItemStateChanged

    public void llenarTamaño(int idTipoV) {
        tamañoVehiculoCB.removeAllItems();
        Costoservicio temp = new Costoservicio();
        for (Costoservicio ok : listCosto) {
            if (!(ok.getTipoVehiculoidTipoVehiculo() == null)) {

                if (ok.getTipoVehiculoidTipoVehiculo().getIdTipoVehiculo() == idTipoV) {
                    tamañoVehiculoCB.addItem(ok.getTamanioidTamanio().getDescripcion());
                }
                temp = ok;
            } else {

            }
        }
        tamañoVehiculoCB.repaint();
    }

    private void tipoVehiculoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoVehiculoCBActionPerformed
        //{"Auto", "Camioneta", "Taxi", "Motocicleta"};
        //System.out.println(listTipoV.get(0).getIdTipoVehiculo());
        //System.out.println(" " + tipoVehiculoCB.getSelectedIndex());

        switch (tipoVehiculoCB.getSelectedIndex()) {
            case 0:
                tamañoVehiculoCB.removeAllItems();
                servicioCB.removeAllItems();
                tamañoVehiculoCB.addItem("Chico");
                tamañoVehiculoCB.addItem("Mediano");
                tamañoVehiculoCB.addItem("Grande");
                servicioCB.addItem("Solo Lavado");
                servicioCB.addItem("Lavado con cera");
                servicioCB.addItem("Lavado con crema");
                servicioCB.addItem("Lavado con encerado (pasta)");
                servicioCB.addItem("Lavado con encerado (pasta premium)");
                servicioCB.repaint();
                tamañoVehiculoCB.repaint();
                servInterior.setEnabled(true);

                repaint();
                break;
            case 1:
                tamañoVehiculoCB.removeAllItems();
                servicioCB.removeAllItems();
                tamañoVehiculoCB.addItem("Chico");
                tamañoVehiculoCB.addItem("Mediano");
                tamañoVehiculoCB.addItem("Grande");
                tamañoVehiculoCB.addItem("4 x 4");
                servicioCB.addItem("Solo Lavado");
                servicioCB.addItem("Lavado con cera");
                servicioCB.addItem("Lavado con crema");
                servicioCB.addItem("Lavado con encerado (pasta)");
                servicioCB.addItem("Lavado con encerado (pasta premium)");
                servInterior.setEnabled(true);

                repaint();
                break;
            case 2:
                servicioCB.removeAllItems();
                tamañoVehiculoCB.removeAllItems();
                tamañoVehiculoCB.addItem(" ");
                servicioCB.addItem("Solo Lavado");
                servicioCB.addItem("Lavado con cera");
                servicioCB.addItem("Lavado con crema");
                servInterior.setEnabled(true);

                servicioCB.repaint();
                tamañoVehiculoCB.repaint();
                break;
            case 3:
                servicioCB.removeAllItems();
                tamañoVehiculoCB.removeAllItems();
                tamañoVehiculoCB.addItem("Chica");
                tamañoVehiculoCB.addItem("Mediana");
                servicioCB.addItem("Solo Lavado");
                servicioCB.addItem("Lavado con cera");
                servicioCB.addItem("Lavado con crema");
                servInterior.setSelected(false);
                servInteriorActionPerformed(evt);
                servInterior.setEnabled(false);

                servicioCB.repaint();
                tamañoVehiculoCB.repaint();

                break;

        }
        extraSuciedad.setSelected(false);
        //extraSuciedadActionPerformed(evt);

    }//GEN-LAST:event_tipoVehiculoCBActionPerformed

    private void tamañoVehiculoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tamañoVehiculoCBActionPerformed
        int indiceTamaño = getIndiceTamañoCB();
        int indiceTipoVehiculo = getIndiceTipoVCB();
        int indiceServicio = getIndiceServicioCB();

        int idTipo;// = listTipoV.get(indiceTipoVehiculo).getIdTipoVehiculo();
        int idTama;// = listTamanio.get(indiceTamaño).getIdTamanio();
        int idServ;// = listServ.get(indiceServicio).getIdServicio();

        if (indiceTamaño > -1 && indiceTipoVehiculo > -1 && indiceServicio > -1) {

            //System.out.println("Tamaño " + indiceTamaño + " Tipo Vehiculo " + indiceTipoVehiculo + " Indice Servicio " + indiceServicio);
            //servicioCB.addItem("  ");
            //servicioCB.removeItemAt(servicioCB.getItemCount() - 1);
            servicioCB.setSelectedIndex(indiceServicio);
            servicioCB.repaint();
            tamañoVehiculoCB.repaint();

            /*switch (indiceTamaño) {
                case 0:
                    
                    break;
                case 1:
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 4:
                    break;
            }*/
        }

    }//GEN-LAST:event_tamañoVehiculoCBActionPerformed

    private void servicioCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicioCBActionPerformed
        int idTipo;
        int idTama;
        int idServ;

        switch (tipoVehiculoCB.getSelectedIndex()) {
            case 0:
                switch (tamañoVehiculoCB.getSelectedIndex()) {
                    case 0:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(0).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);

                        break;
                    case 1:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(1).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                    case 2:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(2).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                }
                break;

            case 1:
                switch (tamañoVehiculoCB.getSelectedIndex()) {
                    case 0:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(0).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                    case 1:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(1).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                    case 2:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(2).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                    case 3:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = (servicioCB.getSelectedIndex() > 2) ? 106 : listTamanio.get(3).getIdTamanio();
                        idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                }
                break;

            case 2:
                switch (servicioCB.getSelectedIndex()) {
                    case 0:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = listTamanio.get(5).getIdTamanio();
                        idServ = listServ.get(0).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);

                        break;
                    case 1:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = listTamanio.get(5).getIdTamanio();
                        idServ = listServ.get(1).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                    case 2:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = listTamanio.get(5).getIdTamanio();
                        idServ = listServ.get(2).getIdServicio();
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                }
                break;
            case 3:

                switch (tamañoVehiculoCB.getSelectedIndex()) {
                    case 0:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = listTamanio.get(0).getIdTamanio();
                        if (servicioCB.getSelectedIndex() > -1) {
                            idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                            System.out.println(idServ);
                            idTipoVehiculoF = idTipo;
                            idTamañoF = idTama;
                            idServicioF = idServ;
                            buscarPrecio(idTipo, idTama, idServ);
                            totalPagar.setText("" + total);
                        }
                        break;
                    case 1:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = listTamanio.get(1).getIdTamanio();
                        if (servicioCB.getSelectedIndex() > -1) {
                            idServ = listServ.get(servicioCB.getSelectedIndex()).getIdServicio();
                            System.out.println(idServ);
                            idTipoVehiculoF = idTipo;
                            idTamañoF = idTama;
                            idServicioF = idServ;
                            buscarPrecio(idTipo, idTama, idServ);
                            totalPagar.setText("" + total);
                        }
                        break;
                    /*
                        
                        switch (servicioCB.getSelectedIndex()) {
                            case 0:
                                idServ = listServ.get(0).getIdServicio();
                                break;
                            case 1:
                                idServ = listServ.get(1).getIdServicio();
                                break;
                            case 2:
                                idServ = listServ.get(2).getIdServicio();
                                break;
                            default:
                                idServ = listServ.get(0).getIdServicio();
                                break;
                        }
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;
                    case 1:
                        idTipo = listTipoV.get(tipoVehiculoCB.getSelectedIndex()).getIdTipoVehiculo();
                        idTama = listTamanio.get(1).getIdTamanio();
                        switch (servicioCB.getSelectedIndex()) {
                            case 0:
                                idServ = listServ.get(0).getIdServicio();
                                break;
                            case 1:
                                idServ = listServ.get(1).getIdServicio();
                                break;
                            case 2:
                                idServ = listServ.get(2).getIdServicio();
                                break;
                            default:
                                idServ = listServ.get(0).getIdServicio();
                                break;
                        }
                        idTipoVehiculoF = idTipo;
                        idTamañoF = idTama;
                        idServicioF = idServ;
                        buscarPrecio(idTipo, idTama, idServ);
                        totalPagar.setText("" + total);
                        break;*/
                }
                break;
        }
        extraSuciedad.setSelected(false);
    }//GEN-LAST:event_servicioCBActionPerformed

    private void extraSuciedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extraSuciedadActionPerformed
        if (extraSuciedad.isSelected()) {
            if (servicioCB.getSelectedIndex() < 3) {
                for (Costoservicio oe : listCosto) {
                    if (oe.getServicioidServicio().getIdServicio() == 410) {
                        
                        total += oe.getPrecio();
                        totalPagar.setText("" + total);
                        costo[2] = oe;
                        repaint();
                    }
                }
            }
        } else {
            if (!extraSuciedad.isSelected()) {
                for (Costoservicio oe : listCosto) {
                    if (oe.getServicioidServicio().getIdServicio() == 410) {
                        total -= oe.getPrecio();
                        costo[2] = null;
                        totalPagar.setText("" + total);
                        repaint();
                    }
                }
            }
        }
        
    }//GEN-LAST:event_extraSuciedadActionPerformed

    private void servInteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servInteriorActionPerformed

        if (servInterior.isSelected()) {
            btnIndividual.setEnabled(true);
            btnPaquete.setEnabled(true);
            btnIndividual.setSelected(true);

            tNAsientos.setEnabled(true);
            noAsientos.setEnabled(true);
            separadorNA.setEnabled(true);

            noAsientos.setForeground(Color.GRAY);
            noAsientos.setText("0");

            tTamaño.setEnabled(false);
            tamañoLICB.setEnabled(false);
            tPaquete.setEnabled(false);
            paqueteLICB.setEnabled(false);

            repaint();

        } else {
            if (!servInterior.isSelected()) {
                btnIndividual.setEnabled(false);
                btnPaquete.setEnabled(false);

                tNAsientos.setEnabled(false);
                noAsientos.setEnabled(false);
                separadorNA.setEnabled(true);

                noAsientos.setForeground(Color.GRAY);
                noAsientos.setText("0");

                tTamaño.setEnabled(false);
                tamañoLICB.setEnabled(false);
                tPaquete.setEnabled(false);
                paqueteLICB.setEnabled(false);
                total -= totalTemp;
                totalPagar.setText("" + total);
                totalTemp = 0;
                costo[1] = null;

                repaint();
            }
        }
    }//GEN-LAST:event_servInteriorActionPerformed

    private void btnIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIndividualActionPerformed
        if (btnIndividual.isSelected()) {

            tNAsientos.setEnabled(true);
            noAsientos.setEnabled(true);
            separadorNA.setEnabled(true);

            tTamaño.setEnabled(false);
            tamañoLICB.setEnabled(false);
            tPaquete.setEnabled(false);
            paqueteLICB.setEnabled(false);

            noAsientos.setForeground(Color.GRAY);
            noAsientos.setText("0");
            total -= totalTemp;
            totalTemp = 0;
            totalPagar.setText("" + total);
            btnPaquete.setEnabled(true);
            btnIndividual.setEnabled(false);

            repaint();
        }
    }//GEN-LAST:event_btnIndividualActionPerformed

    private void btnPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaqueteActionPerformed
        if (btnPaquete.isSelected()) {
            total -= totalTemp;
            totalTemp = 0;
            tTamaño.setEnabled(true);
            tamañoLICB.setEnabled(true);
            tPaquete.setEnabled(true);
            paqueteLICB.setEnabled(true);

            tNAsientos.setEnabled(false);
            noAsientos.setEnabled(false);
            separadorNA.setEnabled(false);

            noAsientos.setForeground(Color.GRAY);
            noAsientos.setText("0");

            tamañoLICB.setSelectedIndex(0);

            btnPaquete.setEnabled(false);
            btnIndividual.setEnabled(true);

            repaint();
        }
    }//GEN-LAST:event_btnPaqueteActionPerformed

    private void noAsientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noAsientosActionPerformed
        noAsientos.setForeground(Color.BLACK);
    }//GEN-LAST:event_noAsientosActionPerformed

    private void noAsientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noAsientosMouseClicked
        noAsientos.setForeground(Color.BLACK);
    }//GEN-LAST:event_noAsientosMouseClicked

    private void noAsientosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noAsientosKeyPressed
        //

    }//GEN-LAST:event_noAsientosKeyPressed

    private void noAsientosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noAsientosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_noAsientosFocusLost

    private void tamañoLICBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tamañoLICBActionPerformed
        int indiceP;
        //double totalTemp;
        if (btnPaquete.isSelected()) {
            System.out.println("Paquete " + listServ.get(5 + paqueteLICB.getSelectedIndex()).getIdServicio() + " tamaño " + listTamanio.get(tamañoLICB.getSelectedIndex()).getIdTamanio());
            switch (tamañoLICB.getSelectedIndex()) {

                case 0:
                    indiceP = 5 + paqueteLICB.getSelectedIndex();
                    buscarPLI(listServ.get(indiceP).getIdServicio(), listTamanio.get(0).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;
                    totalPagar.setText("" + total);
                    repaint();
                    break;
                case 1:
                    indiceP = 5 + paqueteLICB.getSelectedIndex();
                    buscarPLI(listServ.get(indiceP).getIdServicio(), listTamanio.get(1).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;
                    totalPagar.setText("" + total);
                    repaint();
                    break;
                case 2:
                    indiceP = 5 + paqueteLICB.getSelectedIndex();
                    buscarPLI(listServ.get(indiceP).getIdServicio(), listTamanio.get(2).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;
                    totalPagar.setText("" + total);
                    repaint();
                    break;
                case 3:
                    indiceP = 5 + paqueteLICB.getSelectedIndex();
                    buscarPLI(listServ.get(indiceP).getIdServicio(), listTamanio.get(4).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;
                    totalPagar.setText("" + total);
                    repaint();
                    break;
            }
        }
    }//GEN-LAST:event_tamañoLICBActionPerformed

    private void paqueteLICBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paqueteLICBActionPerformed
        int indiceP;
        //double totalTemp;
        if (btnPaquete.isSelected()) {
            System.out.println(listServ.get(5 + paqueteLICB.getSelectedIndex()).getIdServicio() + " " + listTamanio.get(tamañoLICB.getSelectedIndex()).getIdTamanio());
            switch (paqueteLICB.getSelectedIndex()) {
                case 0:
                    indiceP = (tamañoLICB.getSelectedIndex() < 3) ? tamañoLICB.getSelectedIndex() : 4;
                    buscarPLI(listServ.get(5).getIdServicio(), listTamanio.get(indiceP).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;

                    totalPagar.setText("" + total);
                    repaint();
                    break;
                case 1:
                    indiceP = (tamañoLICB.getSelectedIndex() < 3) ? tamañoLICB.getSelectedIndex() : 4;
                    buscarPLI(listServ.get(6).getIdServicio(), listTamanio.get(indiceP).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;
                    totalPagar.setText("" + total);
                    repaint();
                    break;
                case 2:
                    indiceP = (tamañoLICB.getSelectedIndex() < 3) ? tamañoLICB.getSelectedIndex() : 4;
                    buscarPLI(listServ.get(7).getIdServicio(), listTamanio.get(indiceP).getIdTamanio());
                    totalTemp = totalPaquete;//total + totalPaquete;
                    totalPagar.setText("" + total);
                    repaint();
                    break;
            }
        }
    }//GEN-LAST:event_paqueteLICBActionPerformed

    private void noAsientosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noAsientosKeyTyped

    }//GEN-LAST:event_noAsientosKeyTyped

    private void noAsientosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noAsientosKeyReleased
        // TODO add your handling code here:
        txtMensaje.setForeground(Color.BLACK);
        txtMensaje.setText("");
        double precio = 0;
        for (Costoservicio lo : listCosto) {

            if (lo.getServicioidServicio().getIdServicio() == 409) {
                precio = lo.getPrecio();
                costo[1] = lo;
            }
        }
        try {
            if (noAsientos.getText().equalsIgnoreCase("")) {
                noAsientos.setText("0");
            } else {
                totalAsiento = Double.parseDouble(noAsientos.getText()) * precio;
                total = total - totalTemp + totalAsiento;
                totalTemp = totalAsiento;
                totalPagar.setText("" + total);
            }
        } catch (NumberFormatException e) {
            txtMensaje.setForeground(Color.red);
            txtMensaje.setText("Coloque numeros");
        }
    }//GEN-LAST:event_noAsientosKeyReleased

    private void noAsientosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noAsientosFocusGained
        /*txtMensaje.setForeground(Color.BLACK);
        txtMensaje.setText("");*/
    }//GEN-LAST:event_noAsientosFocusGained

    private void modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modeloActionPerformed

    public void buscarPLI(int idserv, int idTamaño) {
        for (Costoservicio oe : listCosto) {
            if (!(oe.getTamanioidTamanio() == null)) {
                if (oe.getTamanioidTamanio().getIdTamanio() == idTamaño) {
                    if (!(oe.getTamanioidTamanio() == null)) {
                        if (oe.getServicioidServicio().getIdServicio() == idserv) {
                            totalPaquete = oe.getPrecio();
                            if (totalTemp == 0) {
                                total += totalPaquete;
                                System.out.println("" + totalPaquete);
                                costo[1] = oe;
                            } else {
                                total = total - totalTemp + totalPaquete;
                                costo[1] = oe;
                            }
                        }
                    }
                }
            }
        }
    }

    public void buscarPrecio(int idTipoV, int idTamaño, int idservicio) {
        for (Costoservicio cs : listCosto) {
            if (!(cs.getTipoVehiculoidTipoVehiculo() == null)) {
                if (cs.getTipoVehiculoidTipoVehiculo().getIdTipoVehiculo() == idTipoV) {
                    if (!(cs.getTamanioidTamanio() == null)) {
                        if (cs.getTamanioidTamanio().getIdTamanio() == idTamaño) {
                            if (cs.getServicioidServicio().getIdServicio() == idservicio) {
                                total = cs.getPrecio() + totalTemp;
                                costo[0] = cs;
                            }
                        }
                    } else {
                        if (cs.getServicioidServicio().getIdServicio() == idservicio) {
                            total = cs.getPrecio() + totalTemp;
                            costo[0] = cs;
                        }
                    }
                }
            }
        }
    }

    public int getIndiceTamañoCB() {
        return tamañoVehiculoCB.getSelectedIndex();
    }

    public int getIndiceTipoVCB() {
        return tipoVehiculoCB.getSelectedIndex();
    }

    public int getIndiceServicioCB() {
        return servicioCB.getSelectedIndex();
    }

    public void getTamanio(int idTamaño) {
        for (Tamanio oe : listTamanio) {
            if (oe != null) {
                if (oe.getIdTamanio() == idTamaño) {
                    tamanio = oe;
                }
            } else {
                tamanio = new Tamanio();
                //tamanio.setIdTamanio(null);
            }
        }

    }

    public void getServ(int idserv) {
        for (Servicio oe : listServ) {
            if (oe != null) {
                if (oe.getIdServicio() == idserv) {
                    servicio = oe;
                }
            } else {
                servicio = new Servicio();
                //tamanio.setIdTamanio(null);
            }
        }

    }

    public void getTipoV(int idTipoV) {
        for (Tipovehiculo oe : listTipoV) {
            if (oe != null) {
                if (oe.getIdTipoVehiculo() == idTipoV) {
                    tipoV = oe;
                }
            } else {
                tipoV = new Tipovehiculo();
                //tamanio.setIdTamanio(null);
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnAceptar;
    private javax.swing.JPanel btnCobrar;
    private javax.swing.JRadioButton btnIndividual;
    private javax.swing.JRadioButton btnPaquete;
    private javax.swing.JLabel cambio;
    private javax.swing.JTextField color;
    private javax.swing.JTextField dineroIngresado;
    private javax.swing.JCheckBox extraSuciedad;
    private javax.swing.ButtonGroup grupoServAdic;
    private javax.swing.JTextField idUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField marca;
    private javax.swing.JTextField modelo;
    private javax.swing.JTextField noAsientos;
    private javax.swing.JTextField nombreCliente;
    private javax.swing.JPanel panelGen;
    private javax.swing.JComboBox<String> paqueteLICB;
    private javax.swing.JTextField placas;
    private javax.swing.JSeparator separadorNA;
    private javax.swing.JCheckBox servInterior;
    private javax.swing.JComboBox<String> servicioCB;
    private javax.swing.JLabel tColor;
    private javax.swing.JLabel tExceso;
    private javax.swing.JLabel tMarca;
    private javax.swing.JLabel tModelo;
    private javax.swing.JLabel tNAsientos;
    private javax.swing.JLabel tNombreCliente;
    private javax.swing.JLabel tPaquete;
    private javax.swing.JLabel tPlacas;
    private javax.swing.JLabel tTamaño;
    private javax.swing.JLabel tTamañoV;
    private javax.swing.JLabel tTipo;
    private javax.swing.JComboBox<String> tamañoLICB;
    private javax.swing.JComboBox<String> tamañoVehiculoCB;
    private javax.swing.JComboBox<String> tipoVehiculoCB;
    private javax.swing.JLabel tlavado;
    private javax.swing.JLabel totalPagar;
    private javax.swing.JLabel txtAceptar;
    private javax.swing.JLabel txtCobro;
    private javax.swing.JLabel txtMensaje;
    private javax.swing.JLabel txtMensajeSesion;
    private javax.swing.JLabel txtMsg;
    // End of variables declaration//GEN-END:variables
}
